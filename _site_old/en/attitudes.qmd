---
title: ""
format:
  html:
    theme: lumen
    page-layout: full
    self-contained: true
    code-fold: true
    code-overflow: wrap
    html-math-method: mathjax
    include-after-body:
      text: |
        <script>
          document.addEventListener("DOMContentLoaded", function () {
              var toc = document.createElement("div");
              toc.id = "custom-toc";
              toc.style.position = "fixed";
              toc.style.top = "0";
              toc.style.right = "-300px";  // Start hidden
              toc.style.width = "260px";
              toc.style.height = "100%";
              toc.style.background = "white";
              toc.style.padding = "10px";
              toc.style.boxShadow = "0px 2px 5px rgba(0, 0, 0, 0.2)";
              toc.style.transition = "right 0.3s ease-in-out";
              toc.style.overflowY = "auto";
          
              var tocTitle = document.createElement("h3");
              tocTitle.innerText = "Navigation";
              toc.appendChild(tocTitle);
          
              var headers = document.querySelectorAll("h2, h3, h4");
              headers.forEach(function (header, index) {
                  if (!header.id) {
                      header.id = "section-" + index;
                  }
          
                  var link = document.createElement("a");
                  link.innerText = header.innerText;
                  link.href = "#" + header.id;
                  link.style.display = "block";
                  link.style.padding = "5px 0";
                  link.style.color = "#007bff";
                  link.style.textDecoration = "none";
          
                  toc.appendChild(link);
              });
          
              document.body.appendChild(toc);
          
              // Create toggle button (ðŸ“‘ icon)
              var button = document.createElement("button");
              button.id = "toggle-toc";
              button.innerHTML = "ðŸ“‘";
              button.style.position = "fixed";
              button.style.top = "15px";
              button.style.right = "15px";
              button.style.backgroundColor = "white";
              button.style.color = "#333";
              button.style.border = "2px solid #ccc"; // Slightly thicker border
              button.style.padding = "10px 12px"; // Increased padding
              button.style.cursor = "pointer";
              button.style.borderRadius = "8px"; // More rounded
              button.style.fontSize = "22px"; // Larger icon
              button.style.zIndex = "1000";
              button.style.boxShadow = "0px 3px 6px rgba(0, 0, 0, 0.2)";
              button.style.width = "50px"; // Increase button size
              button.style.height = "50px"; // Make it square
          
              document.body.appendChild(button);
          
              // Click event to toggle the ToC
              button.addEventListener("click", function () {
                  if (toc.style.right === "0px") {
                      toc.style.right = "-300px"; // Hide ToC
                  } else {
                      toc.style.right = "0px"; // Show ToC
                  }
              });
          });
          document.addEventListener("DOMContentLoaded", function () {
              document.querySelectorAll("a[href='https://favstats.github.io/de25/']").forEach(function(link) {
                  link.addEventListener("click", function(event) {
                      event.preventDefault(); // Prevent default behavior
                      window.open(link.href, "_blank"); // Open in a new tab/window
                  });
              });
          });
        </script>
    includes:
      in-header: |
        <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>

---


```{r, echo = F, warning=F, message=F}
## this is important to keep for some reason ##
library(tippy)
tippy_this(
  elementId = "firstNavItem",
  tooltip = "Your tooltip text here...",
  animation = "scale",
  duration = 1000,
  placement = "bottom"
)

```



```{r setup, include=FALSE}
# here::i_am("wtm_gb.Rproj")


## Global options
knitr::opts_chunk$set(
    cache = F,
    echo = F,
    warning = F,
    message = F,
    cache.lazy = FALSE
)


pacman::p_load(htmltools, tidyverse, highcharter, gt, gtExtras, rvest, haven)

options(scipen = 999)

source("utils.R")


data <- dat %>% 
  mutate(wave = 1) %>% 
  bind_rows(dat2 %>% 
              mutate(wave = 2))  %>% 
  bind_rows(dat3 %>% 
              mutate(wave = 3)) 

```





The page is divided into three main sections. Each section allows you to examine overall trends as well as breakdowns by age, gender, education level, and political leaning.  

::: {.panel-tabset .top .button-tabs}


# {{< iconify fluent-emoji-high-contrast detective >}} Detecting AI-Generated Content {.tabset .tabset-fade .tabset-pills .break} 

## {{< iconify fluent-emoji-high-contrast detective >}} Detecting AI-Generated Content {.tabset .tabset-fade .tabset-pills .break} 


<blockquote class="question-text">
 How confident are you that the following groups can tell the difference between content created by AI and content created by people?

</blockquote>


::: {.panel-tabset}

# Over Time

```{r}


var_labels <- c(
  "People from the general population",
  "Members of Parliament",
  "Judges",
  "Journalists",
  "Police officers",
  "Doctors",
  "Friends/family",
  "Yourself"
)

categories_dat <- c("Confident (5-7)", "Somewhat confident (4)", "Not confident (1-3)")



```


::: {.panel-tabset}

## Overall

::: {.panel-tabset}

```{r, results='asis'}
# data <- data %>% mutate_at(vars(CONF1:CONF8), ~ifelse(.x < 0, NA, .x))

# debugonce(viz_general)
graphics <- viz_wave_change(vecc("CONF", 1:8), 
            var_labels, 
            rev(categories_dat),  wavevar = "wave")

# generate_quarto_dropdown(graphics)

generate_quarto_elements(graphics)
```

::: 


## By Age

::: {.panel-tabset}


```{r, results='asis'}

# debugonce(viz_wave_change2)
list_of_plots_age <- viz_wave_change3(
  data = data ,
  vars = vecc("CONF", 1:8),
  range3 = 5:7,
  display_range = 5:7,
  var_labels = var_labels,
  categories_dat = categories_dat,
  wave_var = "wave",
  group_by_var = "age_groups",
  y_axis_label = "% of Respondents who chose Confident (5-7)",
  facet_by_group = F # This is the only change!
)

tiptext <- "You can hover or click on the legend to highlight, remove or add groups, which can make the chart easier to read.<br><strong>Percentage shows those that chose Confident (5-7).</strong>"

generate_quarto_elements(list_of_plots_age)




```




::: 


<center>

> Tip: `r HTML(tiptext)`

</center>

## By Gender

::: {.panel-tabset}

```{r, results='asis'}

# debugonce(viz_wave_change2)
list_of_plots_gender <- viz_wave_change3(
  data = data %>% filter(geslacht != "Other"),
  vars = vecc("CONF", 1:8),
  range3 = 5:7,
  display_range = 5:7,
  var_labels = var_labels,
  categories_dat = categories_dat,
  wave_var = "wave",
  group_by_var = "geslacht",
  y_axis_label = "% of Respondents who chose Confident (5-7)",
  facet_by_group = F # This is the only change!
)

generate_quarto_elements(list_of_plots_gender)




```





::: 


<center>

> Tip: `r HTML(tiptext)`

</center>

## By Education

::: {.panel-tabset}


```{r, results='asis'}

# debugonce(viz_wave_change2)
list_of_plots_edu <- viz_wave_change3(
  data = data ,
  vars = vecc("CONF", 1:8),
  range3 = 5:7,
  display_range = 5:7,
  var_labels = var_labels,
  categories_dat = categories_dat,
  wave_var = "wave",
  group_by_var = "oplcat",
  y_axis_label = "% of Respondents who chose Confident (5-7)",
  facet_by_group = F # This is the only change!
)

generate_quarto_elements(list_of_plots_edu)




```




::: 


<center>

> Tip: `r HTML(tiptext)`

</center>

## By Politics

::: {.panel-tabset}


```{r, results='asis'}

# debugonce(viz_wave_change2)
list_of_plots_pol <- viz_wave_change3(
  data = data ,
  vars = vecc("CONF", 1:8),
  range3 = 5:7,
  display_range = 5:7,
  var_labels = var_labels,
  categories_dat = categories_dat,
  wave_var = "wave",
  group_by_var = "pol_cat",
  y_axis_label = "% of Respondents who chose Confident (5-7)",
  facet_by_group = F # This is the only change!
)

generate_quarto_elements(list_of_plots_pol)




```




::: 


<center>

> Tip: `r HTML(tiptext)`

</center>


::: 







# March 2024 {.tabset .tabset-fade .tabset-pills .break}


::: {.panel-tabset}

## Overall

```{r}



viz_general(vecc("CONF", 1:8), 
            var_labels, 
            categories_dat, data = dat)

```



## By Age 

::: {.panel-tabset}

```{r, results='asis'}

viz_general(vecc("CONF", 1:8), 
            var_labels,
            categories_dat, 
            "age_groups",
            T, data = dat)

```



::: 

## By Gender

::: {.panel-tabset}


```{r, results='asis'}


viz_general(vecc("CONF", 1:8), 
            var_labels,
            categories_dat, 
            "geslacht",
            T, data = dat)

```

::: 

## By Education

::: {.panel-tabset}


```{r, results='asis'}

viz_general(vecc("CONF", 1:8), 
            var_labels,
            categories_dat, 
            "oplcat",
            T, data = dat)

```

::: 

## By Politics

::: {.panel-tabset}

```{r, results='asis'}

viz_general(vecc("CONF", 1:8), 
            var_labels,
            categories_dat, 
            "pol_cat",
            T, data = dat)
```
::: 

:::

# December 2024 {.tabset .tabset-fade .tabset-pills .break}


::: {.panel-tabset}

## Overall

```{r}



viz_general(vecc("CONF", 1:8), 
            var_labels, 
            categories_dat, data = dat2)

```



## By Age 

::: {.panel-tabset}

```{r, results='asis'}

viz_general(vecc("CONF", 1:8), 
            var_labels,
            categories_dat, 
            "age_groups",
            T, data = dat2)

```



::: 

## By Gender

::: {.panel-tabset}


```{r, results='asis'}


viz_general(vecc("CONF", 1:8), 
            var_labels,
            categories_dat, 
            "geslacht",
            T, data = dat2)

```

::: 

## By Education

::: {.panel-tabset}


```{r, results='asis'}

viz_general(vecc("CONF", 1:8), 
            var_labels,
            categories_dat, 
            "oplcat",
            T, data = dat2)

```

::: 

## By Politics

::: {.panel-tabset}

```{r, results='asis'}

viz_general(vecc("CONF", 1:8), 
            var_labels,
            categories_dat, 
            "pol_cat",
            T, data = dat2)
```


::: 

:::



# April 2025 {.tabset .tabset-fade .tabset-pills .break}


::: {.panel-tabset}

## Overall

```{r}

viz_general(vecc("CONF", 1:8), 
            var_labels, 
            categories_dat, data = dat3)

```



## By Age 

::: {.panel-tabset}

```{r, results='asis'}

viz_general(vecc("CONF", 1:8), 
            var_labels,
            categories_dat, 
            "age_groups",
            T, data = dat3)

```



::: 

## By Gender

::: {.panel-tabset}


```{r, results='asis'}


viz_general(vecc("CONF", 1:8), 
            var_labels,
            categories_dat, 
            "geslacht",
            T, data = dat3)

```

::: 

## By Education

::: {.panel-tabset}


```{r, results='asis'}

viz_general(vecc("CONF", 1:8), 
            var_labels,
            categories_dat, 
            "oplcat",
            T, data = dat3)

```

::: 

## By Politics

::: {.panel-tabset}

```{r, results='asis'}

viz_general(vecc("CONF", 1:8), 
            var_labels,
            categories_dat, 
            "pol_cat",
            T, data = dat3)
```
::: 

:::

::: 


# {{< iconify fluent-emoji-high-contrast detective >}} Content Moderation on Social Media {.tabset .tabset-fade .tabset-pills .break} 

## {{< iconify fluent-emoji-high-contrast detective >}} Content Moderation on Social Media {.tabset .tabset-fade .tabset-pills .break} 

Social media companies often engage in 'content moderation', such as removing content that does not comply with the rules. News organizations are sometimes accused of spreading misinformation (disinformation), causing social media companies to remove their news stories. 

<blockquote class="question-text">
To what extent do you agree with the following statements? 
</blockquote>


::: {.panel-tabset}

# Over Time

```{r}


var_labels <- c(
  "I trust that a social media platform can determine whether something is disinformation or not.",
  "Social media platforms should restrict or remove content they deem disinformation, even if it comes from news organizations.",
  "Social media platforms should only restrict or remove news content if they notify the news organizations in advance.",
  "The freedom of news organizations is threatened by the content moderation of social media platforms.",
  "News organizations should have the ability to challenge content moderation decisions made by social media platforms.",
  "Certain news organizations should be moderated more than others by social media companies. "
)

categories_dat <- c("Agree (5-7)", "Neither agree or disagree (4)", "Disagree (1-3)") %>% rev()



```


::: {.panel-tabset}

## Overall

::: {.panel-tabset}

```{r, results='asis'}
# data <- data %>% mutate_at(vars(CONF1:CONF8), ~ifelse(.x < 0, NA, .x))

# debugonce(viz_general)
graphics <- viz_wave_change(vecc("CMN", 1:6), 
            var_labels, 
            rev(categories_dat),  wavevar = "wave")

# generate_quarto_dropdown(graphics)

generate_quarto_elements(graphics)
```

::: 


## By Age

::: {.panel-tabset}


```{r, results='asis'}

# debugonce(viz_wave_change2)
list_of_plots_age <- viz_wave_change3(
  data = data ,
  vars = vecc("CMN", 1:6),
  range3 = 5:7,
  display_range = 5:7,
  var_labels = var_labels,
  categories_dat = categories_dat,
  wave_var = "wave",
  group_by_var = "age_groups",
  y_axis_label = "% of Respondents who chose Confident (5-7)",
  facet_by_group = F # This is the only change!
)

tiptext <- "You can hover or click on the legend to highlight, remove or add groups, which can make the chart easier to read.<br><strong>Percentage shows those that chose Confident (5-7).</strong>"

generate_quarto_elements(list_of_plots_age)




```




::: 


<center>

> Tip: `r HTML(tiptext)`

</center>

## By Gender

::: {.panel-tabset}

```{r, results='asis'}

# debugonce(viz_wave_change2)
list_of_plots_gender <- viz_wave_change3(
  data = data %>% filter(geslacht != "Other"),
  vars = vecc("CMN", 1:6),
  range3 = 5:7,
  display_range = 5:7,
  var_labels = var_labels,
  categories_dat = categories_dat,
  wave_var = "wave",
  group_by_var = "geslacht",
  y_axis_label = "% of Respondents who chose Confident (5-7)",
  facet_by_group = F # This is the only change!
)

generate_quarto_elements(list_of_plots_gender)




```





::: 


<center>

> Tip: `r HTML(tiptext)`

</center>

## By Education

::: {.panel-tabset}


```{r, results='asis'}

# debugonce(viz_wave_change2)
list_of_plots_edu <- viz_wave_change3(
  data = data ,
  vars = vecc("CMN", 1:6),
  range3 = 5:7,
  display_range = 5:7,
  var_labels = var_labels,
  categories_dat = categories_dat,
  wave_var = "wave",
  group_by_var = "oplcat",
  y_axis_label = "% of Respondents who chose Confident (5-7)",
  facet_by_group = F # This is the only change!
)

generate_quarto_elements(list_of_plots_edu)




```




::: 


<center>

> Tip: `r HTML(tiptext)`

</center>

## By Politics

::: {.panel-tabset}


```{r, results='asis'}

# debugonce(viz_wave_change2)
list_of_plots_pol <- viz_wave_change3(
  data = data ,
  vars = vecc("CMN", 1:6),
  range3 = 5:7,
  display_range = 5:7,
  var_labels = var_labels,
  categories_dat = categories_dat,
  wave_var = "wave",
  group_by_var = "pol_cat",
  y_axis_label = "% of Respondents who chose Confident (5-7)",
  facet_by_group = F # This is the only change!
)

generate_quarto_elements(list_of_plots_pol)




```




::: 


<center>

> Tip: `r HTML(tiptext)`

</center>


::: 







# December 2024 {.tabset .tabset-fade .tabset-pills .break}


::: {.panel-tabset}

## Overall

```{r}



viz_general(vecc("CMN", 1:6), 
            var_labels, 
            categories_dat, data = dat2)

```



## By Age 

::: {.panel-tabset}

```{r, results='asis'}

viz_general(vecc("CMN", 1:6), 
            var_labels,
            categories_dat, 
            "age_groups",
            T, data = dat2)

```



::: 

## By Gender

::: {.panel-tabset}


```{r, results='asis'}


viz_general(vecc("CMN", 1:6), 
            var_labels,
            categories_dat, 
            "geslacht",
            T, data = dat2)

```

::: 

## By Education

::: {.panel-tabset}


```{r, results='asis'}

viz_general(vecc("CMN", 1:6), 
            var_labels,
            categories_dat, 
            "oplcat",
            T, data = dat2)

```

::: 

## By Politics

::: {.panel-tabset}

```{r, results='asis'}

viz_general(vecc("CMN", 1:6), 
            var_labels,
            categories_dat, 
            "pol_cat",
            T, data = dat2)
```


::: 

:::



# April 2025 {.tabset .tabset-fade .tabset-pills .break}


::: {.panel-tabset}

## Overall

```{r}

viz_general(vecc("CMN", 1:6), 
            var_labels, 
            categories_dat, data = dat3)

```



## By Age 

::: {.panel-tabset}

```{r, results='asis'}

viz_general(vecc("CMN", 1:6), 
            var_labels,
            categories_dat, 
            "age_groups",
            T, data = dat3)

```



::: 

## By Gender

::: {.panel-tabset}


```{r, results='asis'}


viz_general(vecc("CMN", 1:6), 
            var_labels,
            categories_dat, 
            "geslacht",
            T, data = dat3)

```

::: 

## By Education

::: {.panel-tabset}


```{r, results='asis'}

viz_general(vecc("CMN", 1:6), 
            var_labels,
            categories_dat, 
            "oplcat",
            T, data = dat3)

```

::: 

## By Politics

::: {.panel-tabset}

```{r, results='asis'}

viz_general(vecc("CMN", 1:6), 
            var_labels,
            categories_dat, 
            "pol_cat",
            T, data = dat3)
```
::: 

:::

::: 





# {{< iconify mingcute safe-lock-fill >}} Trust in ADM Systems {.tabset .tabset-fade .tabset-pills .break}

## {{< iconify mingcute safe-lock-fill >}} Trust in ADM Systems {.tabset .tabset-fade .tabset-pills .break}


> We ask you a number of additional questions about automatic decision-making (ADM) systems. These are computer programs that make decisions that used to be made by people. These decisions are made automatically by computers based on data. 



<blockquote class="question-text">
How much do you trust automated decision-making systems to properly determine...

</blockquote>

::: {.panel-tabset}

## Overall

```{r}
var_labels <- c(
  "Social Welfare",
  "The News You See",
  "Cancer Diagnosis"
)

# categories_dat <- c("confident", "neither", "not confident")
categories_dat <- c("Trust (5-7)", "Somewhat trust (4)", "Little trust (1-3)")


viz_general(vecc("TADS", 1:3), 
            var_labels, 
            categories_dat)
```

## By Age 

::: {.panel-tabset}

```{r, results='asis'}

viz_general(vecc("TADS", 1:3), 
            var_labels,
            categories_dat, 
            "age_groups",
            T)

```



::: 

## By Gender

::: {.panel-tabset}


```{r, results='asis'}


viz_general(vecc("TADS", 1:3), 
            var_labels,
            categories_dat, 
            "geslacht",
            T)

```

::: 

## By Education

::: {.panel-tabset}


```{r, results='asis'}

viz_general(vecc("TADS", 1:3), 
            var_labels,
            categories_dat, 
            "oplcat",
            T)

```

::: 

## By Politics

::: {.panel-tabset}

```{r, results='asis'}

viz_general(vecc("TADS", 1:3), 
            var_labels,
            categories_dat, 
            "pol_cat",
            T)
```
::: 

:::



# {{< iconify game-icons sands-of-time >}} Future of ADM Systems {.tabset .tabset-fade .tabset-pills .break}

## {{< iconify game-icons sands-of-time >}} Future of ADM Systems {.tabset .tabset-fade .tabset-pills .break}



<blockquote class="question-text">
If automated decision-making (ADM) becomes more common in the future, what do you think will happen?

</blockquote>

::: {.panel-tabset}

## Overall

```{r}
var_labels <- c(
  "If the news is automated, journalists will be able to focus more on investigative journalism.",
  "I will only get news items that interest me.",
  "It will make reporting fairer and more balanced.",
  "If certain law enforcement tasks are automated, the police will have more time to focus on major crimes.",
  "It will make the determination of social benefits fairer and more balanced."
)

categories_dat <- c("Agree (5-7)", "Neither agree or disagree (4)", "Disagree (1-3)")

viz_general(vecc("ADSO", 1:5), 
            var_labels, 
            categories_dat)


```

## By Age 

::: {.panel-tabset}

```{r, results='asis'}

viz_general(vecc("ADSO", 1:5), 
            var_labels,
            categories_dat, 
            "age_groups",
            T)

```



::: 

## By Gender

::: {.panel-tabset}


```{r, results='asis'}


viz_general(vecc("ADSO", 1:5), 
            var_labels,
            categories_dat, 
            "geslacht",
            T)

```

::: 

## By Education

::: {.panel-tabset}


```{r, results='asis'}

viz_general(vecc("ADSO", 1:5), 
            var_labels,
            categories_dat, 
            "oplcat",
            T)

```

::: 

## By Politics

::: {.panel-tabset}

```{r, results='asis'}

viz_general(vecc("ADSO", 1:5), 
            var_labels,
            categories_dat, 
            "pol_cat",
            T)
```
::: 

:::


::: 

<br>

<center>

<img src="algosoclogo.png" width="13%">


</center>



