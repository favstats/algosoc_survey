---
title: Exposure to AI-Generated Content
description-meta: "How often do you think you have come across the following things on social media in the past year?"
format: 
  html:
    page-layout: full
execute:
  echo: false
---

```{r setup, include=FALSE}
# here::i_am("wtm_gb.Rproj")


## Global options
knitr::opts_chunk$set(
    cache = F,
    echo = F,
    warning = F,
    message = F,
    cache.lazy = FALSE
)


pacman::p_load(htmltools, tidyverse, highcharter, gt, gtExtras, rvest, haven)

options(scipen = 999)
```






```{r include=FALSE}
# print(getwd())
# here::here("")
# prCint(getwd())
# hcoptslang <- getOption("highcharter.lang")
# 
# hcoptslang$shortMonths <- c("Jan", "Feb", "Mrt", "Apr", "Mei", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dec")
# 
# options(highcharter.lang = hcoptslang)

data <- read_sav("../L_AlgoSoc_wave1_1.0p.sav")



std.error <- function(x) sd(x, na.rm =T)/sqrt(length(x))


# data %>% 
#   write_csv("../L_AlgoSoc_wave1_1.0p.csv")
```



```{=html}
<!-- Updated styling for tabs -->
<style>
  .tab {
    display: none;
  }
  .tab-header {
    display: flex;
    margin: 10px 0;
    overflow: hidden;
    background-color: #f1f1f1;
  }
  .tab-button {
    flex: 1;
    border: none;
    outline: none;
    cursor: pointer;
    padding: 10px 16px;
    transition: 0.3s;
    background-color: #007bff;
    color: white;
    text-align: center;
  }
  .tab-button:hover, .tab-button.active {
    background-color: #0056b3;
  }
  .tab-content {
    padding: 10px;
    margin-top: -1px;
  }
</style>

```



> Artificial Intelligence (AI) can be used to create artificial content such as text, images and videos.

> How often do you think you have come across the following things on social media in the past year?

<div class="tab-header">
  <button class="tab-button" onclick="openTab(event, 'Tab1b')">Overall</button>
  <button class="tab-button" onclick="openTab(event, 'Tab2b')">By Age</button>
  <button class="tab-button" onclick="openTab(event, 'Tab3b')">By Gender   </button>
  <button class="tab-button" onclick="openTab(event, 'Tab4b')">By Education</button>
</div>



  

```{r}
var_labels <- c(
  "Texts made by AI",
  "Photos or images made by AI",
  "Videos made by AI"
)
```



<div id="Tab1b" class="tab tab-content">

```{r}

media_rec <- data %>% 
  select(EXPO1:EXPO3) %>% 
  gather() %>% 
  group_by(key) %>% 
  summarize(mean_val = mean(value, na.rm =T),
            sd_val = std.error(value)) %>% 
  ungroup() %>% 
  mutate(varlabs = var_labels) %>% 
  mutate(varlabs = fct_reorder(varlabs, mean_val)) %>% 
  arrange(desc(varlabs))

theorder <- media_rec %>% distinct(varlabs) %>% pull(varlabs) 

hchart(
  media_rec, 
  "column",
  hcaes(x = varlabs, y = mean_val)#,
  # hcaes(x = key, y = mean_val, group = Type),
  # id = c("a", "b", "c")
  ) %>%
  
  hc_add_series(
    media_rec,
    "errorbar", 
    hcaes(y = mean_val, 
          x = varlabs, low = mean_val - sd_val, 
          high = mean_val + sd_val),
    # hcaes(y = mean_val, x = key, low = mean_val - sd_val, high = mean_val + sd_val, group = Type),
    # linkedTo = c("a", "b", "c"),
    enableMouseTracking = TRUE,
    showInLegend = FALSE
    ) %>% 
  highcharter::hc_plotOptions(
    errorbar = list(
      color = "black", 
      # whiskerLength = 1,
      stemWidth = 1
    ) 
  ) %>% 
  highcharter::hc_xAxis(title = list(text = "")) %>% 
    hc_yAxis(
    title = list(text = "<- 1: not at all    -    7: very often ->"), 
    max = 7
  )
```

</div>

<div id="Tab2b" class="tab tab-content">



```{r}

media_rec_ages <- data %>% #table()
  mutate(age_groups = case_when(
    leeftijd %in% 16:17 ~ "<18",
    leeftijd %in% 18:24 ~ "18-24",
    leeftijd %in% 25:34 ~ "25-34",
    leeftijd %in% 35:44 ~ "35-44",
    leeftijd %in% 45:54 ~ "45-54",
    leeftijd %in% 55:64 ~ "55-64",
    leeftijd %in% 65:150 ~ "65+",
  )) %>% 
  select(EXPO1:EXPO3, age_groups) %>% 
  gather(key, value, -age_groups) %>% 
  group_by(key, age_groups) %>% 
  summarize(mean_val = mean(value, na.rm =T),
            sd_val = std.error(value)) %>% 
  ungroup() %>% 
  mutate(varlabs = case_when(
    key  == "EXPO1" ~ var_labels[1],
    key  == "EXPO2" ~ var_labels[2],
    key  == "EXPO3" ~ var_labels[3]
  )) %>% 
  mutate(varlabs = factor(varlabs, levels = as.character(theorder))) %>%
  arrange(varlabs)%>% 
  mutate(age_groups = fct_relevel(age_groups, "<18")) %>%
  arrange(age_groups)
  # mutate(varlabs = var_labels)
# as.character(theorder)
hchart(
  media_rec_ages, 
  "column",
  # hcaes(x = varlabs, y = mean_val),
  hcaes(x = varlabs, y = mean_val, group = age_groups),
  id = c("a", "b", "c")
  ) %>%
  
  hc_add_series(
    media_rec_ages,
    "errorbar", 
    hcaes(y = mean_val, 
          x = varlabs, low = mean_val - sd_val, 
          high = mean_val + sd_val,
          group = age_groups),
    # hcaes(y = mean_val, x = key, low = mean_val - sd_val, high = mean_val + sd_val, group = Type),
    linkedTo = c("a", "b", "c"),
    enableMouseTracking = TRUE,
    showInLegend = FALSE
    ) %>% 
  highcharter::hc_plotOptions(
    errorbar = list(
      color = "black", 
      # whiskerLength = 1,
      stemWidth = 1
    ) 
  ) %>% 
  highcharter::hc_xAxis(title = list(text = "")) %>% 
    hc_yAxis(
    title = list(text = "<- 1: not at all    -    7: very often ->"), 
    max = 7
  )
```



</div>


<div id="Tab3b" class="tab tab-content">


```{r}

media_rec_genders <- data %>% 
  # count(geslacht) %>% 
  mutate(geslacht = sjmisc::to_label(geslacht)) %>% 
  select(EXPO1:EXPO3, geslacht) %>% 
  gather(key, value, -geslacht) %>% 
  group_by(key, geslacht) %>% 
  summarize(mean_val = mean(value, na.rm =T),
            sd_val = std.error(value)) %>% 
  ungroup() %>% 
  mutate(varlabs = case_when(
    key  == "EXPO1" ~ var_labels[1],
    key  == "EXPO2" ~ var_labels[2],
    key  == "EXPO3" ~ var_labels[3]
  ))  %>% 
  mutate(varlabs = factor(varlabs, levels = as.character(theorder))) %>%
  arrange(varlabs)

hchart(
  media_rec_genders, 
  "column",
  # hcaes(x = varlabs, y = mean_val),
  hcaes(x = varlabs, y = mean_val, group = geslacht),
  id = c("a", "b", "c")
  ) %>%
  
  hc_add_series(
    media_rec_genders,
    "errorbar", 
    hcaes(y = mean_val, 
          x = varlabs, low = mean_val - sd_val, 
          high = mean_val + sd_val,
          group = geslacht),
    # hcaes(y = mean_val, x = key, low = mean_val - sd_val, high = mean_val + sd_val, group = Type),
    linkedTo = c("a", "b", "c"),
    enableMouseTracking = TRUE,
    showInLegend = FALSE
    ) %>% 
  highcharter::hc_plotOptions(
    errorbar = list(
      color = "black", 
      # whiskerLength = 1,
      stemWidth = 1
    ) 
  ) %>% 
  highcharter::hc_xAxis(title = list(text = "")) %>% 
    hc_yAxis(
    title = list(text = "<- 1: not at all    -    7: very often ->"), 
    max = 7
  )
```



</div>


<div id="Tab4b" class="tab tab-content">


```{r}

media_rec_edu <- data %>% 
  drop_na(oplcat) %>% 
  # count(oplcat) %>% 
  mutate(oplcat = sjmisc::to_label(oplcat)) %>% 
  select(EXPO1:EXPO3, oplcat) %>% 
  gather(key, value, -oplcat) %>% 
  group_by(key, oplcat) %>% 
  summarize(mean_val = mean(value, na.rm =T),
            sd_val = std.error(value)) %>% 
  ungroup() %>% 
  mutate(varlabs = case_when(
    key  == "EXPO1" ~ var_labels[1],
    key  == "EXPO2" ~ var_labels[2],
    key  == "EXPO3" ~ var_labels[3]
  )) %>% 
  mutate(varlabs = factor(varlabs, levels = as.character(theorder))) %>%
  arrange(varlabs)
  # mutate(varlabs = var_labels)

hchart(
  media_rec_edu, 
  "column",
  # hcaes(x = varlabs, y = mean_val),
  hcaes(x = varlabs, y = mean_val, group = oplcat),
  id = c("a", "b", "c", "d", "e", "f")
  ) %>%
  
  hc_add_series(
    media_rec_edu,
    "errorbar", 
    hcaes(y = mean_val, 
          x = varlabs, low = mean_val - sd_val, 
          high = mean_val + sd_val,
          group = oplcat),
    # hcaes(y = mean_val, x = key, low = mean_val - sd_val, high = mean_val + sd_val, group = Type),
    linkedTo = c("a", "b", "c", "d", "e", "f"),
    enableMouseTracking = TRUE,
    showInLegend = FALSE
    ) %>% 
  highcharter::hc_plotOptions(
    errorbar = list(
      color = "black", 
      # whiskerLength = 1,
      stemWidth = 1
    ) 
  ) %>% 
  highcharter::hc_xAxis(title = list(text = "")) %>% 
    hc_yAxis(
    title = list(text = "<- 1: not at all    -    7: very often ->"), 
    max = 7
  )
```



</div>



```{=html}
<!-- JavaScript for Tabs -->
<script>
function openTab(evt, tabName) {
  var i, tabcontent, tabbuttons;
  tabcontent = document.getElementsByClassName("tab");
  for (i = 0; i < tabcontent.length; i++) {
    tabcontent[i].style.display = "none";
  }
  tabbuttons = document.getElementsByClassName("tab-button");
  for (i = 0; i < tabbuttons.length; i++) {
    tabbuttons[i].className = tabbuttons[i].className.replace(" active", "");
  }
  document.getElementById(tabName).style.display = "block";
  evt.currentTarget.className += " active";
}

// Open the first tab by default
document.addEventListener("DOMContentLoaded", function() {
  document.getElementsByClassName("tab-button")[0].click();
});
</script>
```






