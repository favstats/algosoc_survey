---
description-meta: ""
execute:
  echo: false
---



```{r, echo = F, warning=F, message=F}
## this is important to keep for some reason ##
library(tippy)
tippy_this(
  elementId = "firstNavItem",
  tooltip = "Your tooltip text here...",
  animation = "scale",
  duration = 1000,
  placement = "bottom"
)

```



The page is divided into four main sections: 


```{=html}
<center>
<div class="button-container">
```
 

  <a href="#iconify-fluent-text-grammar-settings-20-regular-ability-to-recognize-and-influence-ai" class="buttontop">
    {{< iconify fluent text-grammar-settings-20-regular >}} Ability to Recognize and Influence AI
  </a>

  <a href="#iconify-material-symbols-light-interactive-space-outline-rounded-usage-of-ai-systems" class="buttontop">
    {{< iconify material-symbols-light interactive-space-outline-rounded >}} Usage of AI Systems 
  </a>
  <a href="#iconify-lets-icons-view-light-exposure-to-ai" class="buttontop">
    {{< iconify lets-icons view-light >}} Exposure to AI
  </a>
  <a href="#iconify-carbon-ibm-watson-knowledge-studio-familiarity-with-ai-terms" class="buttontop">
    {{< iconify carbon ibm-watson-knowledge-studio >}} Familiarity with AI terms
  </a>
    

```{=html}
</div>
</center>
```


Each section allows you to examine overall trends as well as breakdowns by age, gender, education level, and political leaning.  

```{r setup, include=FALSE}
# here::i_am("wtm_gb.Rproj")


## Global options
knitr::opts_chunk$set(
    cache = F,
    echo = F,
    warning = F,
    message = F,
    cache.lazy = FALSE
)


pacman::p_load(htmltools, tidyverse, highcharter, gt, gtExtras, rvest, haven)

options(scipen = 999)

source("utils.R")
```




```{r include=FALSE}
# print(getwd())
# here::here("")
# prCint(getwd())
# hcoptslang <- getOption("highcharter.lang")
# 
# hcoptslang$shortMonths <- c("Jan", "Feb", "Mrt", "Apr", "Mei", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dec")
# 
# options(highcharter.lang = hcoptslang)

polvals <- read_sav("../../cv23o_EN_1.0p.sav") %>% 
  mutate(left_right = cv23o101) #%>% 
  # mutate(left_right = ifelse(is.na(left_right), "99", left_right))

data <- read_sav("../../L_AlgoSoc_wave1_1.0p.sav") %>% #table()
  mutate(age_groups = case_when(
    leeftijd %in% 16:17 ~ "16-17",
    leeftijd %in% 18:24 ~ "18-24",
    leeftijd %in% 25:34 ~ "25-34",
    leeftijd %in% 35:44 ~ "35-44",
    leeftijd %in% 45:54 ~ "45-54",
    leeftijd %in% 55:64 ~ "55-64",
    leeftijd %in% 65:150 ~ "65+",
  )) %>% 
  left_join(polvals %>% select(nomem_encr, left_right)) %>% 
  mutate(pol_cat = case_when(
    left_right %in% 0:3 ~ "left",
    left_right %in% 4:6 ~ "center",
    left_right %in% 7:10 ~ "right"
    ))


std.error <- function(x) sd(x, na.rm =T)/sqrt(length(x))


# read_sav("../../L_AlgoSoc_wave1_1.0p.sav") %>% #table()
#   mutate(age_groups = case_when(
#     leeftijd %in% 16:17 ~ "16-17",
#     leeftijd %in% 18:24 ~ "18-24",
#     leeftijd %in% 25:34 ~ "25-34",
#     leeftijd %in% 35:44 ~ "35-44",
#     leeftijd %in% 45:54 ~ "45-54",
#     leeftijd %in% 55:64 ~ "55-64",
#     leeftijd %in% 65:150 ~ "65+",
#   )) %>% drop_na(ADSR1)

# fin <-wtm_weighted %>% 
#   select(nomem_encr, weight) %>% 
#   left_join(data)
# 
# fin
# 
# lm(DIGIQ1 ~ 1, data = fin, weights = fin$weight)
# 
# mean(fin$DIGIQ1, na.rm = T)
# 
# weighted.mean(fin$DIGIQ1, w = fin$weight, na.rm = T)
var_labels <- c(
  "I recognize it when a website or app uses AI to adapt the content to me.",
  "I recognize it when specific content is recommended to me by AI.",
  "I know where to find the settings to change or disable AI personalization.",
  "I know how to access the data that AI systems use to tailor content to me.",
  "I know how I can influence what content is recommended to me by AI."
)
data %>%
  generate_general("DIGIQ1", "DIGIQ5", var_labels,
                   "<- 1: totally disagree   -    7: totally agree ->")
```



# {{< iconify fluent text-grammar-settings-20-regular >}} Ability to Recognize and Influence AI {.tabset .tabset-fade .tabset-pills .break}

> With artificial intelligence (AI), computer programs can perform tasks themselves and also learn themselves. AI is increasingly used in society, and also in online media. Many websites use AI to show you more content and ads you like. The following questions are about the offers (such as articles, films or songs) that are shown to you on websites and apps for news and entertainment (e.g. Netflix or Spotify). 


<blockquote class="question-text">
  To what extent do you agree or disagree with the following statements?
</blockquote>

::: {.panel-tabset}

## Overall

```{r}
var_labels <- c(
  "I recognize it when a website or app uses AI to adapt the content to me.",
  "I recognize it when specific content is recommended to me by AI.",
  "I know where to find the settings to change or disable AI personalization.",
  "I know how to access the data that AI systems use to tailor content to me.",
  "I know how I can influence what content is recommended to me by AI."
)
thevarlabs <- var_labels
# data %>% 
#   generate_general("DIGIQ1", "DIGIQ5", var_labels,
#                    "<- 1: totally disagree   -    7: totally agree ->")




  fin <- data %>% 
    select(DIGIQ1:DIGIQ5) %>% 
    # select(var1:var2, weight) %>% 
    drop_na() %>% 
    set_names(var_labels)
  
  media_rec <- fin %>% 
    # gather(key, value, -weight) %>% 
    gather(key, value) %>% 
    mutate(value = case_when(
      value %in% 1:3 ~ "disagree",
      value == 4 ~ "neither agree or disagree",
      value %in% 5:7 ~ "agree"
    )) %>% 
    group_by(key) %>% 
    count(value) %>% 
    ungroup() #%>% 
    # mutate(varlabs = var_labels) %>% 
    # mutate(varlabs = fct_reorder(varlabs, mean_val)) %>% 
    # arrange(desc(varlabs))
  


 fin <- data %>% 
    select(DIGIQ1:DIGIQ5) %>% 
    # select(var1:var2, weight) %>% 
    drop_na() %>% 
    set_names(var_labels)
  
  media_rec <- fin %>% 
    # gather(key, value, -weight) %>% 
    gather(key, value) %>% 
    mutate(value = case_when(
      value %in% 1:3 ~ "disagree",
      value == 4 ~ "neither agree or disagree",
      value %in% 5:7 ~ "agree"
    )) %>% 
    group_by(key) %>% 
    count(value) %>% 
    ungroup() #%>% 
    # mutate(varlabs = var_labels) %>% 
    # mutate(varlabs = fct_reorder(varlabs, mean_val)) %>% 
    # arrange(desc(varlabs))
# Define distinct colors for each value
colors <- c("#1f77b4", "#ff7f0e", "#2ca02c") # Add more colors if needed

# Create a stacked bar chart with highcharter
media_rec %>% 
  group_by(key) %>% 
  mutate(perc = n/sum(n)*100) %>%
  ungroup()  %>%
  mutate(value = fct_relevel(value, c("agree", "neither agree or disagree", "disagree"))) %>% 
  hchart("bar", hcaes(x = key, y = perc, group = value)) %>%
  hc_plotOptions(bar = list(stacking = "percent")) %>%
  hc_yAxis(max = 100) %>%
  # hc_title(text = "Stacked Bar Chart") %>%
  hc_legend(enabled = TRUE) %>%
  hc_colors(colors)
```





## By Age

```{r, eval = F}
data %>% 
  by_age("DIGIQ1", "DIGIQ5", var_labels,
                   "<- 1: totally disagree   -    7: totally agree ->")
```
::: {.panel-tabset}

```{r}
# Define distinct colors for each value
colors <- c("#1f77b4", "#ff7f0e", "#2ca02c")  # Add more colors if needed

# Prepare the variable labels for the data
varlabdat <- data %>%
  select(DIGIQ1:DIGIQ5) %>%
  names() %>%
  tibble(key = ., varlabs = thevarlabs)

# Prepare the data
fin <- data %>%
  select(DIGIQ1:DIGIQ5, age_groups) %>%
  drop_na() %>% 
  set_names(c(thevarlabs, "age_groups"))

# Recoding the values and summarizing by key and age group
media_rec_ages <- fin %>%
  gather(key, value, -age_groups) %>%
  mutate(value = case_when(
    value %in% 1:3 ~ "disagree",
    value == 4 ~ "neither agree or disagree",
    value %in% 5:7 ~ "agree"
  )) %>%
  count(key, age_groups, value) %>%
  group_by(key, age_groups) %>%
  mutate(perc = n / sum(n) * 100) %>%
  ungroup()


list_of_plots <- media_rec_ages$key %>% 
  unique() %>% 
  map(~{
    media_rec_ages %>%
      filter(key == .x) %>%
      mutate(value = fct_relevel(value, c("agree", "neither agree or disagree", "disagree"))) %>%
      hchart("bar", hcaes(x = age_groups, y = perc, group = value)) %>%
      hc_plotOptions(bar = list(stacking = "percent")) %>%
      hc_xAxis(title = list(text = "")) %>%
      hc_yAxis(max = 100, title = list(text = "Percentage")) %>%
      # hc_xAxis(categories = categories_grouped, labels = list(style = list(fontSize = "10px"))) %>%
      hc_title(text = .x) %>%
      hc_colors(colors)%>%
    hc_chart(style = list(width = "100%", height = "100%"))   # Adjust dimensions as needed
  })


# Then pass final list to `hw_grid` function.
```


```{r}
# list_of_plots[[1]]
```
```{r, results='asis'}
# library(tidyverse)
# library(highcharter)
# library(htmltools)

generate_quarto_elements <- function(list_of_plots, plots_per_page = 2) {
  plot_to_html <- function(plot) {
    as.character(tags$div(
      class = "flex-item2",
      htmltools::tagList(plot)
    ))
  }
  
  num_plots <- length(list_of_plots)
  num_pages <- ceiling(num_plots / plots_per_page)
  
  # Include CSS for Flexbox layout


  
  for (page in 1:num_pages) {
    start_index <- (page - 1) * plots_per_page + 1
    end_index <- min(page * plots_per_page, num_plots)
    
    plots_for_page <- list_of_plots[start_index:end_index]
    
    html_content <- paste(
      '<table style="width:100%; border-spacing: 1px;">',
      '<tr>',
      paste(
        lapply(plots_for_page, function(plot) {
          paste0('<td style="width:50%; vertical-align: top;">', plot_to_html(plot), '</td>')
        }),
        collapse = "\n"
      ),
      '</tr>',
      '</table>'
    )
    

    cat(paste0("### ", page, "\n"))
    cat(html_content)
  }
}

generate_quarto_elements(list_of_plots, plots_per_page = 2)

```



::: 

## By Gender

```{r}
data %>% 
  by_gender("DIGIQ1", "DIGIQ5", var_labels,
                   "<- 1: totally disagree   -    7: totally agree ->")
```


## By Education



```{r}
data %>% 
  by_edu("DIGIQ1", "DIGIQ5", var_labels,
                   "<- 1: totally disagree   -    7: totally agree ->")
```


## By Politics

```{r}
data %>% 
  by_pol("DIGIQ1", "DIGIQ5", var_labels,
                   "<- 1: totally disagree   -    7: totally agree ->")
```

:::



# {{< iconify material-symbols-light interactive-space-outline-rounded >}} Usage of AI Systems {.tabset .tabset-fade .tabset-pills .break}

<blockquote class="question-text">
  How often in the past year did you use...
</blockquote>


::: {.panel-tabset}


## Overall


```{r}


data %>% 
  generate_general("ADM1", "ADM2", 
                  c("...text generators like ChatGPT?", 
                    "...image generators like Midjourney?"))


```


<!-- </div> -->

<!-- <div id="Tab2a" class="tab tab-content"> -->

## By Age


```{r}



data %>% 
  by_age("ADM1", "ADM2", 
                  c("...text generators like ChatGPT?", 
                    "...image generators like Midjourney?"))
```

<!-- </div> -->

<!-- <div id="Tab3a" class="tab tab-content"> -->

## By Gender


```{r}


data %>% 
  by_gender("ADM1", "ADM2", 
                  c("...text generators like ChatGPT?", 
                    "...image generators like Midjourney?"))
```


<!-- </div> -->

<!-- <div id="Tab4a" class="tab tab-content"> -->

## By Education

```{r}


data %>% 
  by_edu("ADM1", "ADM2", 
                  c("...text generators like ChatGPT?", 
                    "...image generators like Midjourney?"))
```

<!-- </div> -->

<!-- <div id="Tab5a" class="tab tab-content"> -->

## By Politics

```{r}


data %>% 
  by_pol("ADM1", "ADM2", 
                  c("...text generators like ChatGPT?", 
                    "...image generators like Midjourney?"))
```

<!-- </div> -->

:::


# {{< iconify lets-icons view-light >}} Exposure to AI {.tabset .tabset-fade .tabset-pills .break}

> Artificial Intelligence (AI) can be used to create artificial content such as text, images and videos.


<blockquote class="question-text">
  How often do you think you have come across the following things on social media in the past year?
</blockquote>



```{r}
var_labels <- c(
  "Texts made by AI",
  "Photos or images made by AI",
  "Videos made by AI"
)
```


::: {.panel-tabset}

## Overall

```{r}
data %>% 
  generate_general("EXPO1", "EXPO3", var_labels,
                   thelabel = "<- 1: not at all    -    7: very often ->")
```

## By Age


```{r}
data %>% 
  by_age("EXPO1", "EXPO3", var_labels,
                   thelabel = "<- 1: not at all    -    7: very often ->")
```


## By Gender

```{r}
data %>% 
  by_gender("EXPO1", "EXPO3", var_labels,
                   thelabel = "<- 1: not at all    -    7: very often ->")
```



## By Education

```{r}
data %>% 
  by_edu("EXPO1", "EXPO3", var_labels,
                   thelabel = "<- 1: not at all    -    7: very often ->")
```

## By Politics

```{r}
data %>% 
  by_pol("EXPO1", "EXPO3", var_labels,
                   thelabel = "<- 1: not at all    -    7: very often ->")
```

:::

# {{< iconify carbon ibm-watson-knowledge-studio >}} Familiarity with AI terms {.tabset .tabset-fade .tabset-pills .break}

<blockquote class="question-text">
  How familiar are you with the following terms?

</blockquote>

```{r}
var_labels <- c(
  "Generative AI",
  "ChatGPT",
  "Deepfakes",
  "Algorithms",
  "Chatbots"
)
```



::: {.panel-tabset}

## Overall

```{r}
data %>% 
  generate_general("KAI1", "KAI5", var_labels,
                   "<- 1: not familiar with it at all    -    7: very familiar with it ->")
```


## By Age

```{r}
data %>% 
  by_age("KAI1", "KAI5", var_labels,
                   "<- 1: not familiar with it at all    -    7: very familiar with it ->")
```



## By Gender

```{r}
data %>% 
  by_gender("KAI1", "KAI5", var_labels,
                   "<- 1: not familiar with it at all    -    7: very familiar with it ->")
```



## By Education

```{r}
data %>% 
  by_edu("KAI1", "KAI5", var_labels,
                   "<- 1: not familiar with it at all    -    7: very familiar with it ->")
```


## By Politics

```{r}
data %>% 
  by_pol("KAI1", "KAI5", var_labels,
                   "<- 1: not familiar with it at all    -    7: very familiar with it ->")
```


:::




<br>

<center>

<img src="algosoclogo.png" width="13%">


</center>


